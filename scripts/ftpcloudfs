#!/usr/bin/env python
import sys
import logging

from optparse import OptionParser
from socket import gethostbyname, gaierror

from pyftpdlib import ftpserver

from ftpcloudfs.server import RackspaceCloudAuthorizer, RackspaceCloudFilesFS
from ftpcloudfs.constants import version, default_address, default_port


def setup_log(log_file=None):
    def log(log_type, msg):
        log_type(msg)
    ftpserver.log = lambda msg: log(logging.info, msg)
    ftpserver.logline = lambda msg: log(logging.debug, msg)
    ftpserver.logerror = lambda msg: log(logging.error, msg)
    
    log_format = '%(asctime)-15s - %(levelname)s - %(message)s'
    logging.basicConfig(filename=log_file,
                        format=log_format,
                        level=logging.DEBUG)
    
def main():
    parser = OptionParser(usage="ftpcloudfs.py [OPTIONS].....")
    parser.add_option('-p', '--port',
                      type="int",
                      dest="port",
                      default=default_port,
                      help="Port to bind the server default: %d." % \
                          (default_port)
                      )

    parser.add_option('-b', '--bind-address',
                      type="str",
                      dest="bind_address",
                      default=default_address,
                      help="Address to bind default: %s." % (default_address)
                      )
    
    parser.add_option('-l', '--log-file',
                      type="str",
                      dest="log_file",
                      default=None,
                      help="Log File: Default stdout"
                      )
    (options, args) = parser.parse_args()

    setup_log(options.log_file)
    
    ftp_handler = ftpserver.FTPHandler
    ftp_handler.banner = 'Rackspace Cloud Files %s using %s' % \
        (version, ftp_handler.banner)
    ftp_handler.authorizer = RackspaceCloudAuthorizer()
    ftp_handler.abstracted_fs = RackspaceCloudFilesFS

    try:
        ftp_handler.masquerade_address = gethostbyname(options.bind_address)
    except gaierror, (errno, errmsg):
        sys.exit('Address error: %s' % errmsg)
    
    ftpd = ftpserver.FTPServer((options.bind_address,
                                options.port),
                               ftp_handler)
    ftpd.serve_forever()
    

if __name__ == '__main__':
    main()
