Description: Upstream changes introduced in version 0.9-1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 ftp-cloudfs (0.9-1) unstable; urgency=low
 .
   * Initial release
 .
 The person named in the Author field signed this changelog entry.
Author: Christophe Le Guern <c35sys@gmail.com>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/compat
@@ -0,0 +1 @@
+8
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/pyversions
@@ -0,0 +1 @@
+2.4-
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/copyright
@@ -0,0 +1,43 @@
+Format: http://dep.debian.net/deps/dep5
+Upstream-Name: ftp-cloudfs
+Source: https://github.com/chmouel/ftp-cloudfs
+
+Files: *
+Copyright: 2009--2011 Chmouel Boudjnah <chmouel@chmouel.com>
+License: MIT
+ Permission is hereby granted, free of charge, to any person obtaining a copy
+ of this software and associated documentation files (the "Software"), to deal
+ in the Software without restriction, including without limitation the rights
+ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+ copies of the Software, and to permit persons to whom the Software is
+ furnished to do so, subject to the following conditions:
+ .
+ The above copyright notice and this permission notice shall be included in
+ all copies or substantial portions of the Software.
+ . 
+ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+ THE SOFTWARE.
+ .
+Files: debian/*
+Copyright: 2011 Christophe Le Guern <c35sys@gmail.com>
+License: GPL-2+
+ This package is free software; you can redistribute it and/or modify
+ it under the terms of the GNU General Public License as published by
+ the Free Software Foundation; either version 2 of the License, or
+ (at your option) any later version.
+ .
+ This package is distributed in the hope that it will be useful,
+ but WITHOUT ANY WARRANTY; without even the implied warranty of
+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ GNU General Public License for more details.
+ .
+ You should have received a copy of the GNU General Public License
+ along with this program. If not, see <http://www.gnu.org/licenses/>
+ .
+ On Debian systems, the complete text of the GNU General
+ Public License version 2 can be found in "/usr/share/common-licenses/GPL-2".
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/postinst
@@ -0,0 +1,60 @@
+#!/bin/sh
+# postinst script for ftp-cloudfs
+#
+# see: dh_installdeb(1)
+
+set -e
+
+# summary of how this script can be called:
+#        * <postinst> `configure' <most-recently-configured-version>
+#        * <old-postinst> `abort-upgrade' <new version>
+#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
+#          <new-version>
+#        * <postinst> `abort-remove'
+#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
+#          <failed-install-package> <version> `removing'
+#          <conflicting-package> <version>
+# for details, see http://www.debian.org/doc/debian-policy/ or
+# the debian-policy package
+
+
+case "$1" in
+    configure)
+	if ! getent group ftpcloudfs > /dev/null 2>&1
+	then
+		addgroup --system ftpcloudfs >/dev/null
+	fi
+	if ! getent passwd ftpcloudfs > /dev/null 2>&1
+	then
+	        adduser --system --ingroup ftpcloudfs --no-create-home --shell /bin/false ftpcloudfs
+	fi
+
+	mkdir -m 0700 -p /var/log/ftp-cloudfs
+	chown ftpcloudfs:ftpcloudfs /var/log/ftp-cloudfs
+
+	if which update-python-modules >/dev/null 2>&1; then
+        	update-python-modules --post-install
+	fi
+
+	if [ -x "/etc/init.d/ftp-cloudfs" ]; then
+        	update-rc.d ftp-cloudfs defaults >/dev/null
+        	if [ -x "`which invoke-rc.d 2>/dev/null`" ]; then
+                	invoke-rc.d ftp-cloudfs start || exit $?
+        	else
+                	/etc/init.d/ftp-cloudfs start || exit $?
+        	fi
+	fi
+    ;;
+
+    *)
+        echo "postinst called with unknown argument \`$1'" >&2
+        exit 1
+    ;;
+esac
+
+# dh_installdeb will replace this with shell code automatically
+# generated by other debhelper scripts.
+
+#DEBHELPER#
+
+exit 0
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/prerm
@@ -0,0 +1,37 @@
+#!/bin/sh
+# prerm script for ftp-cloudfs
+#
+# see: dh_installdeb(1)
+
+set -e
+
+# summary of how this script can be called:
+#        * <prerm> `remove'
+#        * <old-prerm> `upgrade' <new-version>
+#        * <new-prerm> `failed-upgrade' <old-version>
+#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
+#        * <deconfigured's-prerm> `deconfigure' `in-favour'
+#          <package-being-installed> <version> `removing'
+#          <conflicting-package> <version>
+# for details, see http://www.debian.org/doc/debian-policy/ or
+# the debian-policy package
+
+
+case "$1" in
+    remove|upgrade|deconfigure)
+	invoke-rc.d ftp-cloudfs stop
+    ;;
+
+    *)
+        echo "prerm called with unknown argument \`$1'" >&2
+        exit 1
+    ;;
+esac
+
+# dh_installdeb will replace this with shell code automatically
+# generated by other debhelper scripts.
+
+#DEBHELPER#
+
+exit 0
+
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/postrm
@@ -0,0 +1,57 @@
+#!/bin/sh
+# postrm script for ftp-cloudfs
+#
+# see: dh_installdeb(1)
+
+set -e
+
+# summary of how this script can be called:
+#        * <postrm> `remove'
+#        * <postrm> `purge'
+#        * <old-postrm> `upgrade' <new-version>
+#        * <new-postrm> `failed-upgrade' <old-version>
+#        * <new-postrm> `abort-install'
+#        * <new-postrm> `abort-install' <old-version>
+#        * <new-postrm> `abort-upgrade' <old-version>
+#        * <disappearer's-postrm> `disappear' <overwriter>
+#          <overwriter-version>
+# for details, see http://www.debian.org/doc/debian-policy/ or
+# the debian-policy package
+
+
+case "$1" in
+    remove)
+	echo "Removing ftpcloudfs."
+	
+	update-rc.d -f ftp-cloudfs remove
+
+    ;;
+    purge)
+	echo "Purging ftpcloudfs."
+
+	if (which deluser && getent passwd ftpcloudfs) > /dev/null 2>&1; then
+		deluser --system --quiet --backup-to /var/lib ftpcloudfs
+	fi	
+
+	if (which delgroup && getent group ftpcloudfs) > /dev/null 2>&1; then
+		delgroup --system --quiet ftpcloudfs
+	fi
+
+	[ -e /etc/ftpcloudfs.conf ] && rm -f /etc/ftpcloudfs.conf
+	[ -e /var/log/ftpcloudfs ] && rm -rf /var/log/ftpcloudfs
+	[ -e /etc/logrotate.d/ftpcloudfs ] && rm -f /etc/logrotate.d/ftpcloudfs
+
+    ;;
+
+    *)
+        echo "postrm called with unknown argument \`$1'" >&2
+        exit 1
+    ;;
+esac
+
+# dh_installdeb will replace this with shell code automatically
+# generated by other debhelper scripts.
+
+#DEBHELPER#
+
+exit 0
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/control
@@ -0,0 +1,15 @@
+Source: ftp-cloudfs
+Section: net
+Priority: extra
+Maintainer: Christophe Le Guern <c35sys@gmail.com>
+Build-Depends: debhelper (>= 8.0.0), python-setuptools
+Standards-Version: 3.9.2
+Homepage: https://github.com/chmouel/ftp-cloudfs
+
+Package: ftp-cloudfs
+Architecture: all
+Depends: ${shlibs:Depends}, ${misc:Depends}, adduser, python, python-cloudfiles (>= 1.3.0), python-pyftpdlib (>= 0.5.2), python-daemon (>= 1.5.5)
+Recommends: python-docutils
+Description: A FTP interface to Rackspace Cloud Files and OpenStack Object Storage
+ This is a FTP interface to Rackspace Cloud Files and OpenStack Object Storage
+ allow you to use any FTP clients to use Cloud Files.
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/init.d
@@ -0,0 +1,154 @@
+#!/bin/sh
+### BEGIN INIT INFO
+# Provides:          ftp-cloudfs
+# Required-Start:    $network $local_fs
+# Required-Stop:
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
+# Short-Description: ftp-cloudfs
+# Description:       FTP interface to Rackspace Cloud Files and OpenStack Object Storage.
+### END INIT INFO
+
+# Author: Christophe Le Guern <c35sys@gmail.com>
+
+# PATH should only include /usr
+PATH=/sbin:/usr/sbin:/bin:/usr/bin
+DESC=ftp-cloudfs               # Introduce a short description here
+NAME=ftp-cloudfs               # Introduce the short server's name here
+DAEMON=/usr/sbin/ftp-cloudfs   # Introduce the server's location here
+LOGDIR=/var/log/${NAME}        # Logs directory
+LOGFILE=${LOGDIR}/${NAME}.log  # Log file
+DAEMON_ARGS="-l ${LOGFILE}"    # Arguments to run the daemon with
+PIDFILE=/var/run/$NAME.pid
+SCRIPTNAME=/etc/init.d/$NAME
+
+# Exit if the package is not installed
+[ -x $DAEMON ] || exit 0
+
+# Read configuration variable file if it is present
+[ -r /etc/default/$NAME ] && . /etc/default/$NAME
+
+# Load the VERBOSE setting and other rcS variables
+. /lib/init/vars.sh
+
+# Define LSB log_* functions.
+# Depend on lsb-base (>= 3.0-6) to ensure that this file is present.
+. /lib/lsb/init-functions
+
+#
+# Function that starts the daemon/service
+#
+do_start()
+{
+	# Return
+	#   0 if daemon has been started
+	#   1 if daemon was already running
+	#   2 if daemon could not be started
+	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
+		|| return 1
+	start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \
+		$DAEMON_ARGS \
+		|| return 2
+	# Add code here, if necessary, that waits for the process to be ready
+	# to handle requests from services started subsequently which depend
+	# on this one.  As a last resort, sleep for some time.
+}
+
+#
+# Function that stops the daemon/service
+#
+do_stop()
+{
+	# Return
+	#   0 if daemon has been stopped
+	#   1 if daemon was already stopped
+	#   2 if daemon could not be stopped
+	#   other if a failure occurred
+	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME
+	RETVAL="$?"
+	[ "$RETVAL" = 2 ] && return 2
+	# Wait for children to finish too if this is a daemon that forks
+	# and if the daemon is only ever run from this initscript.
+	# If the above conditions are not satisfied then add some other code
+	# that waits for the process to drop all resources that could be
+	# needed by services started subsequently.  A last resort is to
+	# sleep for some time.
+	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON
+	[ "$?" = 2 ] && return 2
+	# Many daemons don't delete their pidfiles when they exit.
+	rm -f $PIDFILE
+	return "$RETVAL"
+}
+
+#
+# Function that sends a SIGHUP to the daemon/service
+#
+do_reload() {
+	#
+	# If the daemon can reload its configuration without
+	# restarting (for example, when it is sent a SIGHUP),
+	# then implement that here.
+	#
+	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
+	return 0
+}
+
+case "$1" in
+  start)
+    [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
+    do_start
+    case "$?" in
+		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
+		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
+	esac
+  ;;
+  stop)
+	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
+	do_stop
+	case "$?" in
+		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
+		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
+	esac
+	;;
+  status)
+       status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
+       ;;
+  #reload|force-reload)
+	#
+	# If do_reload() is not implemented then leave this commented out
+	# and leave 'force-reload' as an alias for 'restart'.
+	#
+	#log_daemon_msg "Reloading $DESC" "$NAME"
+	#do_reload
+	#log_end_msg $?
+	#;;
+  restart|force-reload)
+	#
+	# If the "reload" option is implemented then remove the
+	# 'force-reload' alias
+	#
+	log_daemon_msg "Restarting $DESC" "$NAME"
+	do_stop
+	case "$?" in
+	  0|1)
+		do_start
+		case "$?" in
+			0) log_end_msg 0 ;;
+			1) log_end_msg 1 ;; # Old process is still running
+			*) log_end_msg 1 ;; # Failed to start
+		esac
+		;;
+	  *)
+	  	# Failed to stop
+		log_end_msg 1
+		;;
+	esac
+	;;
+  *)
+	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
+	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
+	exit 3
+	;;
+esac
+
+:
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/README.Debian
@@ -0,0 +1,7 @@
+ftp-cloudfs for Debian
+----------------------
+
+By default, debian package is configured to use logfiles, be aware of it.
+Default Log Location: /var/log/ftp-cloudfs/ftp-cloudfs.log
+
+ Christophe Le Guern <c35sys@gmail.com>  Mon, 21 Nov 2011 10:59:38 +0100
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/logrotate
@@ -0,0 +1,13 @@
+/var/log/ftp-cloudfs/ftp-cloudfs.log
+{
+	rotate 365
+	daily
+	dateext
+	missingok
+	notifempty
+	compress
+	create 0640 daemon daemon
+	postrotate
+		invoke-rc.d python-ftp-cloudfs restart >/dev/null 2>&1 || true
+	endscript
+}
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/rules
@@ -0,0 +1,15 @@
+#!/usr/bin/make -f
+# -*- makefile -*-
+# Sample debian/rules that uses debhelper.
+# This file was originally written by Joey Hess and Craig Small.
+# As a special exception, when this file is copied by dh-make into a
+# dh-make output file, you may use that output file without restriction.
+# This special exception was added by Craig Small in version 0.37 of dh-make.
+
+# Uncomment this to turn on verbose mode.
+#export DH_VERBOSE=1
+
+WITH_PYTHON2 = $(shell test -f /usr/bin/dh_python2 && echo "--with python2")
+
+%:
+        dh $@ ${WITH_PYTHON2}
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/changelog
@@ -0,0 +1,5 @@
+ftp-cloudfs (0.9-1) unstable; urgency=low
+
+  * Initial release
+
+ -- Christophe Le Guern <c35sys@gmail.com>  Mon, 21 Nov 2011 10:59:38 +0100
--- /dev/null
+++ ftp-cloudfs-0.9/debian-backup/source/format
@@ -0,0 +1 @@
+3.0 (quilt)
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/PKG-INFO
@@ -0,0 +1,169 @@
+Metadata-Version: 1.0
+Name: ftp-cloudfs
+Version: 0.9
+Summary: FTP interface to Rackspace Cloud Files and OpenStack Swift
+Home-page: https://github.com/chmouel/ftp-cloudfs
+Author: Chmouel Boudjnah
+Author-email: chmouel.boudjnah@rackspace.co.uk
+License: MIT
+Download-URL: http://pypi.python.org/packages/source/f/ftp-cloudfs/ftp-cloudfs-0.9.tar.gz
+Description: ==========================================================
+        FTP Interface to Rackspace Cloud Files and OpenStack Swift
+        ==========================================================
+        
+        :Homepage:  http://blog.chmouel.com/2009/10/29/ftp-server-for-cloud-files/
+        :Credits:   Copyright 2009--2011 Chmouel Boudjnah <chmouel@chmouel.com>
+        :Licence:   MIT
+        
+        
+        DESCRIPTION
+        ===========
+        
+        ftp-cloudfs is a ftp server acting as a proxy to `Rackspace Cloud Files`_ or to `OpenStack Swift`_. It allow you to connect via any FTP client to do
+        upload/download or create containers.
+        
+        By default the server will bind to port 2021 which allow to be run as
+        a non root/administrator user.
+        
+        .. _OpenStack Swift: http://launchpad.net/swift
+        .. _RackSpace Cloud Files: http://www.rackspace.com/cloud/cloud_hosting_products/files/
+        
+        It supports pseudo-hierarchical folders/directories as described in the `Rackspace Cloud Files API`_ and the `OpenStack Object Storage API`_.
+        
+        .. _Rackspace Cloud Files API: http://docs.rackspacecloud.com/files/api/cf-devguide-latest.pdf
+        .. _OpenStack Object Storage API: http://docs.openstack.org/openstack-object-storage/developer/content/
+        
+        REQUIREMENT
+        ===========
+        
+        - Python >= 2.6 (probably 2.5 as well but not extensively tested)
+        - python-cloudfiles >= 1.3.0  - http://github.com/rackspace/python-cloudfiles
+        - pyftpdlib >= 0.6.0 - http://code.google.com/p/pyftpdlib/
+        - python-daemon >= 1.6 - http://pypi.python.org/pypi/python-daemon/
+        
+        Operating Systems
+        =================
+        
+        This has been tested on a Debian testing Linux distribution but it
+        should work on any Unices (including MacOSX) as long you have the
+        requirement listed above. 
+        
+        It should as well work on Windows but this has been completely
+        untested.
+        
+        INSTALL
+        =======
+        
+        Use standard setup.py directives ie :
+        
+        python setup.py install
+        
+        Or if you have `pip`_ installed you can just do a ::
+        
+          pip install ftp-cloudfs
+        
+        which will install ftp-cloudfs with all the dependencies needed.
+        
+        On a Debian/Ubuntu the preferred way to install would be like this::
+        
+          apt-get -y install python-daemon python-stdeb
+          pypi-install python-cloudfiles
+          pypi-install pyftpdlib
+          pypi-install ftp-cloudfs
+        
+        .. _`pip`: http://pip.openplans.org/
+        
+        USAGE
+        ======
+        
+        The install should have created a /usr/bin/ftpcloudfs (or whatever
+        prefix defined in your python distribution or command line arguments)
+        which can be used like this :
+        
+        Usage: ftpcloudfs [OPTIONS].....
+          -h, --help            show this help message and exit
+          -p PORT, --port=PORT  Port to bind the server default: 2021.
+          -b BIND_ADDRESS, --bind-address=BIND_ADDRESS
+                                Address to bind by default: 127.0.0.1.
+          --workers=WORKERS     Number of workers to use default: 1.
+          -a AUTHURL, --auth-url=AUTHURL
+                                Auth URL for alternate providers(eg OpenStack)
+          -v, --verbose         Be verbose on logging.
+          -s, --service-net     Connect via Rackspace ServiceNet network.
+          -f, --foreground      Do not attempt to daemonize but run in foreground.
+          -l LOG_FILE, --log-file=LOG_FILE
+                                Log File: Default stdout when in foreground
+          --syslog              Enable logging to the system logger (daemon facility).
+          --pid-file=PID_FILE   Pid file location when in daemon mode.
+          --uid=UID             UID to drop the privilege to when in daemon mode
+          --gid=GID             GID to drop the privilege to when in daemon mode
+        
+        The defaults can be changed using a configuration file (by default in
+        /etc/ftpcloudfs.conf). Check the example file included in the package.
+        
+        SUPPORT
+        =======
+        
+        This tool is not supported by Rackspace in any sort but I will be
+        happy to help you as much as possible. Your best bet to report issues
+        and or feature request is to have them reported in the github issue
+        tracker :
+        
+        https://github.com/chmouel/ftp-cloudfs/issues
+        
+        BUGS
+        ====
+        
+        None known ;-)
+        
+        LICENSE
+        =======
+        
+        Unless otherwise noted, all files are released under the `MIT`_ license,
+        exceptions contain licensing information in them.
+        
+        .. _`MIT`: http://en.wikipedia.org/wiki/MIT_License
+        
+          Copyright (C) 2009-2011 Chmouel Boudjnah <chmouel@chmouel.com>
+        
+          Permission is hereby granted, free of charge, to any person obtaining a copy
+          of this software and associated documentation files (the "Software"), to deal
+          in the Software without restriction, including without limitation the rights
+          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+          copies of the Software, and to permit persons to whom the Software is
+          furnished to do so, subject to the following conditions:
+        
+          The above copyright notice and this permission notice shall be included in
+          all copies or substantial portions of the Software.
+        
+          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
+          SOFTWARE.
+        
+          Except as contained in this notice, the name of Rackspace US, Inc. shall not
+          be used in advertising or otherwise to promote the sale, use or other dealings
+          in this Software without prior written authorisation from Rackspace US, Inc. 
+        
+        Author
+        ======
+        
+        Chmouel Boudjnah <chmouel@chmouel.com>
+        
+        Contributors
+        ============
+        
+        - Nick Craig-Wood <nick@craig-wood.com>
+        - Juan J. Martinez <juan@memset.com>
+        
+        
+Platform: UNKNOWN
+Classifier: Development Status :: 4 - Beta
+Classifier: Environment :: Console
+Classifier: Programming Language :: Python
+Classifier: Operating System :: OS Independent
+Classifier: Environment :: No Input/Output (Daemon)
+Classifier: License :: OSI Approved :: MIT License
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/requires.txt
@@ -0,0 +1,3 @@
+pyftpdlib
+python-cloudfiles
+python-daemon
\ No newline at end of file
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/dependency_links.txt
@@ -0,0 +1 @@
+
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/not-zip-safe
@@ -0,0 +1 @@
+
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/SOURCES.txt
@@ -0,0 +1,17 @@
+setup.py
+bin/ftpcloudfs
+ftp_cloudfs.egg-info/PKG-INFO
+ftp_cloudfs.egg-info/SOURCES.txt
+ftp_cloudfs.egg-info/dependency_links.txt
+ftp_cloudfs.egg-info/not-zip-safe
+ftp_cloudfs.egg-info/requires.txt
+ftp_cloudfs.egg-info/top_level.txt
+ftpcloudfs/__init__.py
+ftpcloudfs/chunkobject.py
+ftpcloudfs/constants.py
+ftpcloudfs/errors.py
+ftpcloudfs/fs.py
+ftpcloudfs/main.py
+ftpcloudfs/monkeypatching.py
+ftpcloudfs/server.py
+ftpcloudfs/utils.py
\ No newline at end of file
--- /dev/null
+++ ftp-cloudfs-0.9/ftp_cloudfs.egg-info/top_level.txt
@@ -0,0 +1 @@
+ftpcloudfs
